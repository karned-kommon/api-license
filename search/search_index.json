{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"API License Documentation","text":"<p>Welcome to the API License service documentation. This documentation provides comprehensive information about the API License service, its features, and how to use it.</p>"},{"location":"#overview","title":"Overview","text":"<p>The API License service is a part of the Karned Kommon platform that handles license management for various products and services. It provides secure license creation, assignment, and validation.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Secure license storage and management</li> <li>License assignment and revocation</li> <li>License validation and verification</li> <li>License renewal and expiration management</li> </ul>"},{"location":"#future-features","title":"Future features","text":"<ul> <li>Rate limiting and throttling</li> <li>Audit logging</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Getting Started - Learn how to set up and start using the API License service</li> <li>API Overview - Detailed information about the API endpoints</li> <li>Development - Information for developers who want to contribute to the project</li> <li>API Gateway - Access the API Gateway</li> <li>Swagger Documentation - Interactive API documentation</li> </ul>"},{"location":"#support","title":"Support","text":"<p>If you need help or have questions, please contact the Karned team.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get started with the API License service.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following:</p> <ul> <li>Python 3.12 or higher</li> <li>Docker (optional, for containerized deployment)</li> <li>Access to the Karned platform</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#local-development","title":"Local Development","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/karned-kommon/api-license.git\ncd api-license\n</code></pre></p> </li> <li> <p>Create a virtual environment and activate it:    <pre><code>python -m venv .venv\nsource .venv/bin/activate  # On Windows, use: .venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Install dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Run the application:    <pre><code>uvicorn main:app --reload\n</code></pre></p> </li> </ol> <p>The API will be available at <code>http://localhost:8000</code>.</p>"},{"location":"getting-started/#docker-deployment","title":"Docker Deployment","text":"<ol> <li> <p>Build the Docker image:    <pre><code>docker build -t api-license --platform=linux/amd64 .\n</code></pre></p> </li> <li> <p>Run the container:    <pre><code>docker run -p 8000:8000 api-license\n</code></pre></p> </li> </ol>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<p>The API License service can be configured using environment variables or a configuration file. See the configuration documentation for more details.</p>"},{"location":"getting-started/#authentication","title":"Authentication","text":"<p>To authenticate with the API, you need to obtain an API token. See the authentication documentation for more details.</p>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>Explore the API Reference to learn about the available endpoints</li> <li>Learn about development and contributing to the project</li> </ul>"},{"location":"api/overview/","title":"API Reference Overview","text":"<p>This section provides detailed information about the API License service endpoints, authentication methods, and response formats.</p>"},{"location":"api/overview/#base-url","title":"Base URL","text":"<p>The base URL for all API endpoints is:</p> <pre><code>https://api.karned.bzh/license/\n</code></pre> <p>For local development, the base URL is:</p> <pre><code>http://localhost:8000/\n</code></pre>"},{"location":"api/overview/#api-versions","title":"API Versions","text":"<p>The API License service supports multiple API versions:</p> <ul> <li>v1: Current stable API</li> </ul> <p>To specify the API version, include it in the URL path:</p> <pre><code>https://api.karned.bzh/license/v1/\n</code></pre>"},{"location":"api/overview/#authentication","title":"Authentication","text":"<p>All API endpoints require authentication. The API License service supports the following authentication methods:</p>"},{"location":"api/overview/#token-authentication","title":"Token Authentication","text":"<p>Most endpoints require a token in the <code>Authorization</code> header:</p> <pre><code>Authorization: Bearer &lt;your_token&gt;\n</code></pre>"},{"location":"api/overview/#api-key-authentication","title":"API Key Authentication","text":"<p>Some endpoints support License key authentication. Include the API key in the <code>X-License-Key</code> header:</p> <pre><code>X-License-Key: &lt;your_license_key&gt;\n</code></pre>"},{"location":"api/overview/#response-format","title":"Response Format","text":"<p>All API responses are in JSON format. A typical response has the following structure:</p> <pre><code>{\n  \"status\": \"success\",\n  \"data\": {\n    // Response data\n  },\n  \"message\": \"Operation completed successfully\"\n}\n</code></pre>"},{"location":"api/overview/#error-responses","title":"Error Responses","text":"<p>Error responses have the following structure:</p> <pre><code>{\n  \"status\": \"error\",\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"message\": \"Error message\"\n  }\n}\n</code></pre>"},{"location":"api/overview/#next-steps","title":"Next Steps","text":"<ul> <li>Visit our Swagger Documentation for interactive API testing and exploration.</li> </ul>"},{"location":"development/contributing/","title":"Contributing Guidelines","text":"<p>Thank you for your interest in contributing to the API License service! This document provides guidelines and instructions for contributing to the project.</p>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally</li> <li>Set up the development environment as described in the Setup Guide</li> <li>Create a new branch for your feature or bug fix</li> </ol>"},{"location":"development/contributing/#development-workflow","title":"Development Workflow","text":"<ol> <li> <p>Create a new branch from <code>main</code> for your changes    <pre><code>git checkout -b feature/your-feature-name\n</code></pre></p> </li> <li> <p>Make your changes and ensure they follow the project's coding standards</p> </li> <li>Write or update tests for your changes</li> <li> <p>Run the tests to ensure they pass    <pre><code>pytest\n</code></pre></p> </li> <li> <p>Format your code    <pre><code>black .\nisort .\n</code></pre></p> </li> <li> <p>Commit your changes with a descriptive commit message    <pre><code>git commit -m \"Add feature: your feature description\"\n</code></pre></p> </li> <li> <p>Push your branch to your fork    <pre><code>git push origin feature/your-feature-name\n</code></pre></p> </li> <li> <p>Create a pull request from your fork to the main repository</p> </li> </ol>"},{"location":"development/contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>When submitting a pull request, please ensure:</p> <ol> <li>Your code follows the project's coding standards</li> <li>All tests pass</li> <li>Your changes are well-documented</li> <li>Your pull request has a descriptive title and detailed description</li> <li>Your pull request addresses only one issue or adds one feature</li> </ol>"},{"location":"development/contributing/#coding-standards","title":"Coding Standards","text":"<ul> <li>Follow PEP 8 style guidelines</li> <li>Use type hints for function parameters and return values</li> <li>Write docstrings for all functions, classes, and modules</li> <li>Keep functions small and focused on a single responsibility</li> <li>Use meaningful variable and function names</li> </ul>"},{"location":"development/contributing/#testing","title":"Testing","text":"<ul> <li>Write unit tests for all new functionality</li> <li>Ensure all tests pass before submitting a pull request</li> <li>Aim for high test coverage</li> </ul>"},{"location":"development/contributing/#documentation","title":"Documentation","text":"<ul> <li>Update documentation for any changes to the API or functionality</li> <li>Document all new features, endpoints, and configuration options</li> <li>Keep the README and other documentation up to date</li> </ul>"},{"location":"development/contributing/#versioning","title":"Versioning","text":"<p>We follow Semantic Versioning for this project:</p> <ul> <li>MAJOR version for incompatible API changes</li> <li>MINOR version for new functionality in a backward-compatible manner</li> <li>PATCH version for backward-compatible bug fixes</li> </ul>"},{"location":"development/contributing/#issue-reporting","title":"Issue Reporting","text":"<p>If you find a bug or have a feature request, please create an issue on GitHub:</p> <ol> <li>Check if the issue already exists</li> <li>Use a clear and descriptive title</li> <li>Provide detailed steps to reproduce the issue</li> <li>Include relevant logs, error messages, and screenshots</li> <li>Describe the expected behavior and the actual behavior</li> </ol>"},{"location":"development/contributing/#code-review-process","title":"Code Review Process","text":"<p>All submissions require review. We use GitHub pull requests for this purpose:</p> <ol> <li>A maintainer will review your pull request</li> <li>They may request changes or improvements</li> <li>Once approved, a maintainer will merge your pull request</li> </ol>"},{"location":"development/contributing/#license","title":"License","text":"<p>By contributing to this project, you agree that your contributions will be licensed under the project's LICENSE.</p>"},{"location":"development/contributing/#questions","title":"Questions?","text":"<p>If you have any questions or need help, please reach out to the maintainers or create an issue on GitHub.</p> <p>Thank you for contributing to the API License service!</p>"},{"location":"development/github-pages/","title":"Deploying to GitHub Pages","text":"<p>This guide explains how to deploy the API License documentation to GitHub Pages.</p>"},{"location":"development/github-pages/#automatic-deployment","title":"Automatic Deployment","text":"<p>The documentation is automatically deployed to GitHub Pages whenever changes are pushed to the <code>main</code> branch that modify files in the <code>docs/</code> directory or the <code>mkdocs.yml</code> file. This is handled by a GitHub Actions workflow.</p>"},{"location":"development/github-pages/#how-it-works","title":"How It Works","text":"<ol> <li>The GitHub Actions workflow is defined in <code>.github/workflows/deploy-docs.yml</code></li> <li>When changes are pushed to the <code>main</code> branch, the workflow:</li> <li>Sets up a Python environment</li> <li>Installs MkDocs and required dependencies</li> <li>Builds the documentation</li> <li>Deploys it to the <code>gh-pages</code> branch</li> <li>GitHub Pages serves the content from the <code>gh-pages</code> branch</li> </ol>"},{"location":"development/github-pages/#viewing-the-deployment-status","title":"Viewing the Deployment Status","text":"<p>You can check the status of the deployment in the \"Actions\" tab of the GitHub repository.</p>"},{"location":"development/github-pages/#manual-deployment","title":"Manual Deployment","text":"<p>If you need to deploy the documentation manually, you can do so using the MkDocs <code>gh-deploy</code> command.</p>"},{"location":"development/github-pages/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>MkDocs and required dependencies installed</li> </ul>"},{"location":"development/github-pages/#deployment-steps","title":"Deployment Steps","text":"<ol> <li> <p>Clone the repository:    <pre><code>git clone https://github.com/karned-kommon/api-license.git\ncd api-license\n</code></pre></p> </li> <li> <p>Install the required dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Deploy to GitHub Pages:    <pre><code>mkdocs gh-deploy\n</code></pre></p> </li> </ol> <p>This command builds the documentation and pushes it to the <code>gh-pages</code> branch of the repository.</p>"},{"location":"development/github-pages/#forcing-deployment","title":"Forcing Deployment","text":"<p>If you need to force the deployment (overwriting existing content), use:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre>"},{"location":"development/github-pages/#accessing-the-documentation","title":"Accessing the Documentation","text":"<p>Once deployed, the documentation is available at:</p> <p>https://karned.github.io/Kommon/api-license/</p>"},{"location":"development/github-pages/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/github-pages/#documentation-not-updating","title":"Documentation Not Updating","text":"<p>If the documentation is not updating after a push:</p> <ol> <li>Check the GitHub Actions workflow in the \"Actions\" tab</li> <li>Ensure the repository has GitHub Pages enabled in the repository settings</li> <li>Verify that the GitHub Pages source is set to the <code>gh-pages</code> branch</li> </ol>"},{"location":"development/github-pages/#local-testing","title":"Local Testing","text":"<p>To test the documentation locally before deployment:</p> <pre><code>mkdocs serve\n</code></pre> <p>This starts a local server at <code>http://localhost:8000</code> where you can preview the documentation.</p>"},{"location":"development/setup/","title":"Development Setup","text":"<p>This guide provides instructions for setting up a development environment for the API License service.</p>"},{"location":"development/setup/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have the following installed:</p> <ul> <li>Python 3.12 or higher</li> <li>Git</li> <li>Docker (optional, for containerized development)</li> <li>Redis (for caching and session management)</li> </ul>"},{"location":"development/setup/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone https://github.com/karned-kommon/api-license.git\ncd api-license\n</code></pre>"},{"location":"development/setup/#virtual-environment","title":"Virtual Environment","text":"<p>It's recommended to use a virtual environment for development:</p> <pre><code>python -m venv .venv\nsource .venv/bin/activate  # On Windows, use: .venv\\Scripts\\activate\n</code></pre>"},{"location":"development/setup/#install-dependencies","title":"Install Dependencies","text":"<p>Install the required dependencies:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>For development, you may also want to install additional packages:</p> <pre><code>pip install pytest pytest-cov black isort flake8\n</code></pre>"},{"location":"development/setup/#configuration","title":"Configuration","text":"<p>The API License service uses environment variables for configuration. Create a <code>.env</code> file in the root directory with the following variables:</p> <pre><code># API Configuration\nPYTHONUNBUFFERED=True\nWORKERS=1\nAPI_NAME=api-license\nAPI_TAG_NAME=licenses\n\n# Keycloak Configuration\nKEYCLOAK_HOST=\nKEYCLOAK_REALM=\nKEYCLOAK_CLIENT_ID=\nKEYCLOAK_CLIENT_SECRET=\n\n# Redis Configuration\nREDIS_HOST=localhost\nREDIS_PORT=6379\nREDIS_DB=0\nREDIS_PASSWORD=\n\n# DB Configuration\nDB_HOST=\nDB_PORT=\nDB_USER=\nDB_PASSWORD=\nDB_DATABASE=\nDB_COLLECTION\n</code></pre>"},{"location":"development/setup/#database-setup","title":"Database Setup","text":"<p>The API License service uses Redis for caching and session management. Make sure Redis is running:</p> <pre><code># Start Redis using Docker\ndocker run --name redis -p 6379:6379 -d redis\n\n# Or if you have Redis installed locally\nredis-server\n</code></pre>"},{"location":"development/setup/#running-the-application","title":"Running the Application","text":"<p>Start the application in development mode:</p> <pre><code>uvicorn main:app --reload --host 0.0.0.0 --port 8000\n</code></pre> <p>The API will be available at <code>http://localhost:8000</code>.</p>"},{"location":"development/setup/#api-documentation","title":"API Documentation","text":"<p>The API documentation is available at <code>http://localhost:8000/docs</code> when the application is running.</p>"},{"location":"development/setup/#running-tests","title":"Running Tests","text":"<p>Run the tests using pytest:</p> <pre><code>pytest\n</code></pre> <p>To generate a coverage report:</p> <pre><code>pytest --cov=.\n</code></pre>"},{"location":"development/setup/#code-formatting","title":"Code Formatting","text":"<p>Format your code using Black and isort:</p> <pre><code>black .\nisort .\n</code></pre> <p>Check for linting issues:</p> <pre><code>flake8\n</code></pre>"},{"location":"development/setup/#debugging","title":"Debugging","text":"<p>For debugging, you can use the built-in debugger in your IDE or the Python debugger (pdb).</p> <p>To use pdb, add the following line where you want to set a breakpoint:</p> <pre><code>import pdb; pdb.set_trace()\n</code></pre>"},{"location":"development/setup/#documentation","title":"Documentation","text":"<p>The project documentation is built using MkDocs. To build and serve the documentation locally:</p> <pre><code>mkdocs serve\n</code></pre> <p>The documentation will be available at <code>http://localhost:8000</code>.</p>"}]}